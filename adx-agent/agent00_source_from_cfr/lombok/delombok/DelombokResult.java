/*
 * Decompiled with CFR 0_110.
 * 
 * Could not load the following classes:
 *  com.sun.tools.javac.tree.JCTree
 *  com.sun.tools.javac.tree.JCTree$JCCompilationUnit
 *  com.sun.tools.javac.tree.JCTree$Visitor
 *  com.sun.tools.javac.util.List
 */
package lombok.delombok;

import com.sun.tools.javac.tree.JCTree;
import com.sun.tools.javac.util.List;
import java.io.IOException;
import java.io.Writer;
import java.util.Date;
import javax.tools.JavaFileObject;
import lombok.delombok.PrettyCommentsPrinter;
import lombok.javac.CommentInfo;

public class DelombokResult {
    private final java.util.List<CommentInfo> comments;
    private final JCTree.JCCompilationUnit compilationUnit;
    private final boolean changed;

    public DelombokResult(java.util.List<CommentInfo> comments, JCTree.JCCompilationUnit compilationUnit, boolean changed) {
        this.comments = comments;
        this.compilationUnit = compilationUnit;
        this.changed = changed;
    }

    public void print(Writer out) throws IOException {
        JavaFileObject sourceFile;
        if (!this.changed && (sourceFile = this.compilationUnit.getSourceFile()) != null) {
            out.write(sourceFile.getCharContent(true).toString());
            return;
        }
        out.write("// Generated by delombok at ");
        out.write(String.valueOf(new Date()));
        out.write(System.getProperty("line.separator"));
        List comments_ = this.comments instanceof List ? (List)this.comments : List.from((Object[])this.comments.toArray(new CommentInfo[0]));
        this.compilationUnit.accept((JCTree.Visitor)new PrettyCommentsPrinter(out, this.compilationUnit, comments_));
    }

    public boolean isChanged() {
        return this.changed;
    }
}

